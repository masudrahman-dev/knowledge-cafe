[
    {
        "_id": "7fbf16a5-3d81-4769-8f75-2bb2f8715d5a",
        "author_image": "https://i.pravatar.cc/300?u=a042b097217207da3e0c3f3de062",
        "firstName": "Emily",
        "lastName": "Ward",
        "blog_title": "Sunt corporis est eligendi quo ut quia quo placeat.",
        "blog_cover_image": "https://picsum.photos/640/480?random=296",
        "published_time": "Mar 14 (4 Days ago)",
        "read_time": "9",
        "question": "Props vs state?",
        "answer_example": "const [value, setValue] = useState(initialValue)",
        "answer": "At first I talk about Component then explain props vs state in react js. Components like a HTML tag bit it is not a tag that we use like html.components use props to communicate with each other. Every parent component can pass some information to its child components by giving them props. Props might remind you of HTML attributes, but you can pass any JavaScript value through them, including objects, arrays, and functions.Props are the information that you pass to a JSX tag. For example, className, src, alt, width, and height are some of the props you can pass to an <img> . here is some characteristic is props: 1.Props are read-only 2.Props are immutable. 3. Props allow you to pass data from one component to other components as an argument. 4. Props can be accessed by the child component. 5. Props are used to communicate between components. 6.Stateless component can have Props. 7.Props make components reusable. lets talk about state. The state is an updatable structure that is used to contain data or information about the component and can change over time. The change in state can happen as a response to user action or system even. 1.State changes can be asynchronous. 2.States can be used for rendering dynamic changes with the component.3.State holds information about the components. 4.State cannot be accessed by child components. 5. 6.Stateless components cannot have State. "
      },

      {
  "_id": "c5a5e3a3-9f5f-47c7-9205-f5c5d93a5a5b",
  "author_image": "https://i.pravatar.cc/300?u=94a5319961b62c15cc206d68e334",
  "firstName": "Scott",
  "lastName": "Davies",
  "blog_title": "Expedita excepturi eveniet explicabo facilis ut enim consectetur nostrum.",
  "blog_cover_image": "https://picsum.photos/640/480?random=418",
  "published_time": "Mar 16 (6 Days ago)",
  "read_time": "7",
  "question": "How does useState work?",
  "answer_example": "const [value, setValue] = useState(initialValue)",
  "answer": "useState is React Hook that allows you to add state to a functional component. It returns an array with two values: the current state and a function to update it. The Hook takes an initial state value as an argument and returns an updated state value.[const [value, setValue] = useState(initialValue)]. Here, the initialValue is the value that we want to start with, and state is the current state value that can be used in your component. The setState function can be used to update the state, triggering a re-render of our component."
},
{
    "_id": "2b11d7f6-d22c-4c17-a60d-16d7b29a1d1d",
    "author_image": "https://i.pravatar.cc/300?u=fa38c7ca6f56828f0a4dd07db24d",
    "firstName": "Hannah",
    "lastName": "Parker",
    "blog_title": "Sed quia odio est quasi est.",
    "blog_cover_image": "https://picsum.photos/640/480?random=127",
    "published_time": "Mar 20 (8 Days ago)",
    "read_time": "6",
    "question": "How does useState work?",
    "answer_example": "useEffect(()={}, [<dependency>])",
    "answer": "The useEffect hook in React has a variety of purposes beyond just fetching data. Some examples here: 1. Updating the document title, 2.Subscribing to events:like mouse clicks, key presses, or scrolling etc. 3.Animations:  use useEffect to trigger animations when certain conditions are met, such as when a component mounts or when a certain value changes, 4.Modifying the DOM: directly modify the DOM based on changes to component state or props. 6.Managing timers: create and manage timers, like countdowns or timeouts, "
  },
  {
    "_id": "c86c2e2c-7e6e-4231-987c-03ed55a0d15d",
    "author_image": "https://i.pravatar.cc/300?u=0ed0c5f46a5d5eb3722d88934a5e",
    "firstName": "Jason",
    "lastName": "Lee",
    "blog_title": "Numquam cum est rerum placeat aut sed suscipit.",
    "blog_cover_image": "https://picsum.photos/640/480?random=300",
    "published_time": "Mar 22 (10 Days ago)",
    "read_time": "5",
    "answer_example": "return h1>Hello, {props.name}/h1>;",
    "question": "How Does React work?",
    "answer": " ReactJS divides the UI into isolated reusable pieces of code known as components. React components work similarly to JavaScript functions as they accept arbitrary inputs called properties or props. It's possible to have as many components as necessary without cluttering our code. some core thing in React,1.JSX , 2.Virtual DOM, 3.Components and Props, 4.State Management. 5.Programmatic Navigation    "

  }
  
]